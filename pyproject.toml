[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "syntax-ai-cli"
version = "0.1.0"
description = "AI-powered Terminal CLI for codebase manipulation and agentic workflows"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
authors = [
    {name = "S-y-N-t-a-X Team", email = "team@syntax-ai.dev"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Tools",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "cli", "llm", "codebase", "automation", "agents", "langchain"]
requires-python = ">=3.9"
dependencies = [
    "click>=8.1.0",
    "rich>=13.0.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-anthropic>=0.1.0",
    "langchain-groq>=0.1.0",
    "langchain-ollama>=0.1.0",
    "langgraph>=0.1.0",
    "chromadb>=0.4.0",
    "sqlalchemy>=2.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "gitpython>=3.1.0",
    "google-generativeai>=0.8.0",
    "tree-sitter>=0.20.0",
    "tree-sitter-python>=0.20.0",
    "tree-sitter-javascript>=0.20.0",
    "tree-sitter-typescript>=0.20.0",
    "tree-sitter-java>=0.20.0",
    "tree-sitter-go>=0.20.0",
    "tree-sitter-rust>=0.20.0",
    "aiofiles>=23.0.0",
    "httpx>=0.25.0",
    "toml>=0.10.0",
    "pyyaml>=6.0.0",
    "jinja2>=3.1.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "pytest-cov>=4.1.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.scripts]
syntax = "ai_cli.main:cli"
ai-cli = "ai_cli.main:cli"
syntax-ui = "ai_cli.ui.interactive:main"
syntax-demo = "ai_cli.ui.demo:main"

[project.urls]
Homepage = "https://github.com/MRMORNINGSTAR2233/S-y-N-t-a-X"
Repository = "https://github.com/MRMORNINGSTAR2233/S-y-N-t-a-X"
Documentation = "https://github.com/MRMORNINGSTAR2233/S-y-N-t-a-X/wiki"
"Bug Tracker" = "https://github.com/MRMORNINGSTAR2233/S-y-N-t-a-X/issues"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["ai_cli*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
